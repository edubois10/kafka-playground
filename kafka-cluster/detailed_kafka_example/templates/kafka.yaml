apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka 
metadata:
  name: kafka
  labels:
    app: strimzi
spec:
  {{- if .Values.kafka.ownCerts.enabled }}
  clusterCa:
    generateSecretOwnerReference: false 
  clientsCa:
    generateSecretOwnerReference: false
  {{- end }}
  kafka:
    jvmOptions:
    {{- if .Values.kafka.jvmOptions.enabled }}
    {{- end }}
    version: 3.3.1
    replicas: {{ .Values.kafka.replicas }}
    listeners:
      - name: tls 
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
          {{- if .Values.kafka.ownCerts.enabled}}
          configuration:
            brokerCertChainAndKey: 
              certificate: tls.crt 
              key: tls.key
              secretName: kafka-tls
          {{- end }}
        networkPolicyPeers:
        {{- if .Values.kafka.networkPolicy.enabled }}
          {{- toYaml .Values.kafka.listeners.networkPolicyPeers | nindent 10 }}
        {{- end }}
      - name: external
        port: 9094 
        tls: true 
        type: route
        configuration:
          {{- if .Values.kafka.customBootstrap.enabled }}
          bootstrap:
            host: {{ .Values.kafka.customBootstrap.host }}
          {{- end }}
        authentication:
          type: scram-sha-512
          {{- if .Values.kafka.ownCerts.enabled }}
          configuration:
            brokerCertChainAndKey: 
              certificate: tls.crt 
              key: tls.key
              secretName: kafka-tls
          {{- end }}
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5 
    authorization:
      type: simple 
    config:
      offsets.topic.replication. factor: 3
      transaction.state.log.replication. factor: 3
      transaction.state.log.min.isr: 2
      default.replication. factor: 3
      min.insync.replicas: 2 
      inter.broker.protocol.version: "3.3"
    storage:
      type: jbod
      volumes:       
        {{- toYaml .Values.kafka.storage.volumes | nindent 6 }}
    metricsConfig:
      type: jmxPrometheusExporter 
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics 
          key: kafka-metrics-config. ymlf
    resources:
      {{- toYaml .Values.kafka.resources | nindent 6 }}
    template:
      pod:
        metadata:
          annotations:
            prometheus.io/port: '9404'
            prometheus.io/scrape: 'true'
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm: 
                labelSelector:
                  matchExpressions:
                    - key: app. kubernetes.io/name
                      operator: In 
                      values:
                        - kafka
                topologyKey: kubernetes.io/hostname
              weight: 90
    {{- if .Values.kafka.rackawarness.enabled }}
    rack:
      topologykey: topology.kubernetes.io/zone
    {{- end }} 
  zookeeper:
    replicas: {{ .Values.zookeeper.replicas }}
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5 
    livenessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    # Jbod is not supported for zookeeper
    storage:
      class: {{ .Values.zookeeper.storage.class }}
      type: persistent-claim 
      size: 20Gi 
      deleteClaim: true
    metricsConfig:
      type: jmxPrometheusExporter 
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics 
          key: zookeeper-metrics-config.yml
    resources:
      {{- toYaml .Values.zookeeper.resources | nindent 6 }}
    template:
      pod:
        metadata:
          annotations:
            prometheus.io/port: '9404'
            prometheus.io/scrape: 'true'
  entityOperator:
    tlsSidecar:
      resources:
      {{- toYaml .Values.entityOperator.tlsSidecar.resources | nindent 8 }}
    topicOperator:
      resources:
      {{- toYaml .Values.entityOperator.topicOperator.resources | nindent 8 }}
    userOperator:
      resources:
      {{- toYaml .Values.entityOperator.userOperator.resources | nindent 8 }}
  kafkaExporter: 
    topicRegex: ".*"
    groupRegex: ".*"
